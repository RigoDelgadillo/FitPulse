// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PIAProWeb.Models.dbModels;

#nullable disable

namespace PIAProWeb.Migrations
{
    [DbContext(typeof(GymContext))]
    partial class GymContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("EstadoMembresia")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha_Inscripcion")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Inscripcion");

                    b.Property<int>("IdRol")
                        .HasMaxLength(320)
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IdRol");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Compra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"), 1L, 1);

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Compra");

                    b.Property<int>("IdMetodoPago")
                        .HasColumnType("int")
                        .HasColumnName("ID_MetodoPago");

                    b.Property<int>("IdPaquete")
                        .HasColumnType("int")
                        .HasColumnName("ID_Paquete");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_Usuario");

                    b.Property<double>("PrecioTotal")
                        .HasColumnType("float")
                        .HasColumnName("Precio_Total");

                    b.HasKey("IdCompra")
                        .HasName("PK_Compra");

                    b.HasIndex("IdMetodoPago");

                    b.HasIndex("IdPaquete");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Ejercicio", b =>
                {
                    b.Property<int>("IdEjercicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Ejercicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEjercicio"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdGruposMusculares")
                        .HasColumnType("int")
                        .HasColumnName("ID_GruposMusculares");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEjercicio");

                    b.HasIndex("IdGruposMusculares");

                    b.ToTable("Ejercicios");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.EjerciciosRutina", b =>
                {
                    b.Property<int>("IdEjercicio")
                        .HasColumnType("int")
                        .HasColumnName("ID_Ejercicio");

                    b.Property<int>("IdRutina")
                        .HasColumnType("int")
                        .HasColumnName("ID_Rutina");

                    b.Property<int>("IdPeso")
                        .HasColumnType("int")
                        .HasColumnName("ID_Peso");

                    b.Property<int>("Repeticiones")
                        .HasColumnType("int");

                    b.Property<int>("Series")
                        .HasColumnType("int");

                    b.HasKey("IdEjercicio", "IdRutina");

                    b.HasIndex("IdPeso");

                    b.HasIndex("IdRutina");

                    b.ToTable("EjerciciosRutinas");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.GruposMusculare", b =>
                {
                    b.Property<int>("IdGruposMusculares")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_GruposMusculares");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGruposMusculares"), 1L, 1);

                    b.Property<string>("Musculo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdGruposMusculares");

                    b.ToTable("GruposMusculares");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.MetodoPago", b =>
                {
                    b.Property<int>("IdMetodoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_MetodoPago");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMetodoPago"), 1L, 1);

                    b.Property<string>("Metodo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdMetodoPago");

                    b.ToTable("MetodoPago");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Peso", b =>
                {
                    b.Property<int>("IdPeso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Peso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPeso"), 1L, 1);

                    b.Property<string>("Peso1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Peso");

                    b.HasKey("IdPeso");

                    b.ToTable("Peso");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Role", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Rol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdRol");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Rutina", b =>
                {
                    b.Property<int>("IdRutina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Rutina");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRutina"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.HasKey("IdRutina")
                        .HasName("PK_Paquetes");

                    b.ToTable("Rutinas");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIAProWeb.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.ApplicationUser", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.Role", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Compra", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.MetodoPago", "IdMetodoPagoNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdMetodoPago")
                        .IsRequired()
                        .HasConstraintName("FK_Compras_MetodoPago");

                    b.HasOne("PIAProWeb.Models.dbModels.Rutina", "IdPaqueteNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdPaquete")
                        .IsRequired()
                        .HasConstraintName("FK_Compra_Paquetes");

                    b.HasOne("PIAProWeb.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Compra_Usuario");

                    b.Navigation("IdMetodoPagoNavigation");

                    b.Navigation("IdPaqueteNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Ejercicio", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.GruposMusculare", "IdGruposMuscularesNavigation")
                        .WithMany("Ejercicios")
                        .HasForeignKey("IdGruposMusculares")
                        .IsRequired()
                        .HasConstraintName("FK_Ejercicios_GruposMusculares");

                    b.Navigation("IdGruposMuscularesNavigation");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.EjerciciosRutina", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.Ejercicio", "IdEjercicioNavigation")
                        .WithMany("EjerciciosRutinas")
                        .HasForeignKey("IdEjercicio")
                        .IsRequired()
                        .HasConstraintName("FK_EjerciciosRutinas_Ejercicios");

                    b.HasOne("PIAProWeb.Models.dbModels.Peso", "IdPesoNavigation")
                        .WithMany("EjerciciosRutinas")
                        .HasForeignKey("IdPeso")
                        .IsRequired()
                        .HasConstraintName("FK_EjerciciosRutinas_Peso");

                    b.HasOne("PIAProWeb.Models.dbModels.Rutina", "IdRutinaNavigation")
                        .WithMany("EjerciciosRutinas")
                        .HasForeignKey("IdRutina")
                        .IsRequired()
                        .HasConstraintName("FK_EjerciciosRutinas_Rutinas");

                    b.Navigation("IdEjercicioNavigation");

                    b.Navigation("IdPesoNavigation");

                    b.Navigation("IdRutinaNavigation");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.ApplicationUser", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Ejercicio", b =>
                {
                    b.Navigation("EjerciciosRutinas");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.GruposMusculare", b =>
                {
                    b.Navigation("Ejercicios");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.MetodoPago", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Peso", b =>
                {
                    b.Navigation("EjerciciosRutinas");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Role", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Rutina", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("EjerciciosRutinas");
                });
#pragma warning restore 612, 618
        }
    }
}
